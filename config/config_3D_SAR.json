{
    "c": {
        "desc": "Speed of light, default 3e8 m/s",
        "value": 3e8
    },
    "bandwidth": {
        "desc": "Bandwidth of the WiFi signal. Default is 20 MHz",
        "value": 20e6
    },
    "channel": {
        "desc": "Wireless channel used in the 5.0 GHz range",
        "value": 108
    },
    "scnum_start": {
        "desc": "starting subcarrier number music/bartlett. Total subcarriers 30, start 0, mid 15, end  30 ",
        "value": 14
    },
    "scnum_end": {
        "desc": "end subcarrier number music/bartlett. Total subcarriers 30",
        "value": 16
    },
    "phi_min": {
        "desc": "Minimum azimuth angle",
        "value": -180
    },
    "phi_max": {
        "desc": "Maximum azimuth angle",
        "value": 180
    },
    "nphi": {
        "desc": "resolution of phi angle",
        "value": 360
    },
    "theta_min": {
        "desc": "Minumum elevation angle",
        "value": 0
    },
    "theta_max": {
        "desc": "Maximum elevation angle",
        "value": 90
    },
    "ntheta": {
        "desc": "resolution of theta angle",
        "value": 90
    },
    "topN_count": {
        "desc": "Top N AOA angles to return from AOA profile",
        "value": 5
    },
    "true_tx_positions": {
        "desc": "True groundtruth positions of TX for checking accuracy",
        "value": {
            "tx0": {
                "position": {
                    "x": 0,
                    "y": 0,
                    "z": 0
                },
                "orientation": {
                    "x": 0,
                    "y": 0,
                    "z": 0,
                    "w": 0
                }
            },
            "tx1": {
                "position": {
                    "x": -3.90,
                    "y": 1.90,
                    "z": 0.08
                },
                "orientation": {
                    "x": 0.0168978497386,
                    "y": -0.006858184468,
                    "z": 0.453646808863,
                    "w": -0.890995025635
                }
            }
        }
    },
    "other_robot_ID": {
        "desc": "MAC-IDs of other robots (denoted as signal transmitters tx) in the team",
        "value": {
            "tx1": {
                "mac_id": "00:21:6A:C0:CB:2A"
            }
        }
    },
    "input_TX_channel_csi_fn": {
        "desc": "Forward channel csi File for each of the neighboring TX robots",
        "value": {
            "tx1": {
                "mac_id": "00:21:6A:C0:CB:2A",
                "csi_fn": "/wsr_data/csi_tx_10cm_1.dat"
            }
        }
    },
    "RX_mac_ID_list": {
        "desc": "List of all mac-ids",
        "value_spoof": [
            "00:21:6A:C0:CB:2A"
        ],
        "value": [
            "00:21:6A:C0:CB:2A"
        ]
    },
    "input_RX_channel_csi_fn": {
        "desc": "Reverse channel csi File stored on the RX robot which is performing 3D SAR",
        "value": {
            "mac_id": "00:21:6A:45:E1:66",
            "csi_fn": "/wsr_data/csi_rx_10cm_1.dat"
        }
    },
    "input_displacement_csv_fn_rx": {
        "desc": "(gt) not actually ground truth, but odometry sensor on robot",
        "value": "/wsr_data/rx_movement_10cm_1.csv"
    },
    "input_orientation_csv_fn_rx_joint": {
        "desc": "Orientation of indepdendently rotating platform (only supports 2D)",
        "value": "~/unused"
    },
    "input_trajectory_csv_fn_tx": {
        "desc": "Trajectory file of TX_Neighbor_robot (WIP)",
        "value": "~/unused"
    },
    "output_aoa_profile_path": {
        "desc": "AOA profile",
        "value": "/WSR_Project/WSR-Toolbox-cpp/debug/"
    },
    "max_packets_to_process": {
        "desc": "Maximum number of csi packets to process",
        "value": 2500
    },
    "min_packets_to_process": {
        "desc": "Minimum number of csi packets to process",
        "value": 1
    },
    "debug_dir": {
        "desc": "dir to save intermediate data files for debugging",
        "value": "/WSR_Project/WSR-Toolbox-cpp/debug/"
    },
    "time_offset": {
        "desc": "offset for time diff on different robots",
        "value": 10e-6
    },
    "time_threshold": {
        "desc": "threshold for paring forward and backward channel",
        "value": 600e-6
    },
    "peak_radius": {
        "desc": "radius of patch to ignore neighbor peak in degree",
        "value": 4
    },
    "displacement_type": {
        "desc": "Motion of robot: 2D, 3D. Impacts steering vector calculation for faster computation",
        "value": "2D"
    },
    "antenna_position_offset": {
        "desc": "offset between center of displacement center and antenna tip (meters)",
        "mocap_offset": [
            0.0,
            0.0,
            0.0
        ]
    },
    "top_N_magnitude": {
        "desc": "Minumum magnitude of a peak with respect to the top peak (in precentage) in order to be considered in top N peaks",
        "value": 10
    },
    "antenna_separation": {
        "desc": "(meters) Used with complex conjugate channel formulation",
        "value": 0.27
    },
    "aoa_estimator": {
        "desc": "use one of the following estimators : bartlett",
        "value": "bartlett"
    },
    "sub_sample_channel_data": {
        "desc": "flag for enabling subsampling of channle data to reduce packet count",
        "value": false
    },
    "get_mean_pose_RX": {
        "desc": "Get mean pose of the RX along its sub-trajectory",
        "value": false
    },
    "use_packet_id": {
        "desc": "Match forward-reverse packets using packet id instead of timestamps",
        "value": true
    },
    "normalize_profile": {
        "desc": "Normalize the profile",
        "value": true
    },
    "use_max_packets_threshold": {
        "desc": "Flag to enable/disable max packet threshold",
        "value": true
    },
    "debug": {
        "desc": "Flag to enable/disbale debug log messages",
        "value": true
    },
    "use_relative_trajectory": {
        "desc": "Flag to enable/disbale usage of relative trajectory",
        "value": false
    },
    "interpolate_phase": {
        "desc": "flag for phase angle interpolation",
        "value": true
    },
    "use_two_antennas": {
        "desc": "Use 2 antenna SAR formulation and complex conjugate to correct for CFO",
        "value": false
    }
}